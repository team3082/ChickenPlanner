name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      COMMIT_SHORT_SHA: ${{ steps.set_commit_sha.outputs.COMMIT_SHORT_SHA }}

    steps:
      - uses: actions/checkout@v4
      - name: Calculate short commit hash
        id: set_commit_sha
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          echo "::set-output name=COMMIT_SHORT_SHA::$calculatedSha"
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23.0.1'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B -Drevision=${{env.COMMIT_SHORT_SHA}} package --file pom.xml
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: FullBuild
          path: target

  package:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: FullBuild
          path: target
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23.0.1'
          distribution: 'temurin'
      - name: Package with jpackage (Linux)
        if: runner.os == 'Linux'
        run: |
          jpackage \
            --input target \
            --name ChickenPlanner \
            --main-jar chicken_planner-${{ needs.build.outputs.COMMIT_SHORT_SHA }}.jar \
            --main-class org.team3082.chicken_planner.ChickenPlannerApplication \
            --type deb \
            --linux-package-name "Chicken Planner" \
            --linux-shortcut \
            -d out
      - name: Package with jpackage (Windows)
        if: runner.os == 'Windows'
        run: |
          jpackage `
            --input target `
            --name ChickenPlanner `
            --main-jar chicken_planner-${{ needs.build.outputs.COMMIT_SHORT_SHA }}.jar `
            --main-class org.team3082.chicken_planner.ChickenPlannerApplication `
            --type msi `
            --win-dir-chooser `
            --win-help-url https://github.com/team3082/ChickenPlanner/issues `
            --win-per-user-install `
            --win-shortcut-prompt `
            -d out
      - name: Package with jpackage (Mac)
        if: runner.os == 'MacOS'
        run: |
          jpackage \
            --input target \
            --name ChickenPlanner \
            --main-jar chicken_planner-${{ needs.build.outputs.COMMIT_SHORT_SHA }}.jar \
            --main-class org.team3082.chicken_planner.ChickenPlannerApplication \
            --type dmg \
            -d out
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ChickenPlanner-${{ matrix.os }}
          path: out